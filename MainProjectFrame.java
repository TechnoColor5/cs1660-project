/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.cs1660.project.mvn;

import com.google.api.client.http.HttpRequestInitializer;
import com.google.api.client.http.javanet.NetHttpTransport;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.gax.paging.Page;
import com.google.api.services.dataproc.*;
import com.google.api.services.dataproc.model.HadoopJob;
import com.google.api.services.dataproc.model.Job;
import com.google.api.services.dataproc.model.JobPlacement;
import com.google.api.services.dataproc.model.SubmitJobRequest;
import com.google.cloud.storage.Storage.*;
import com.google.api.services.storage.model.StorageObject;
import com.google.auth.http.HttpCredentialsAdapter;
import com.google.auth.oauth2.GoogleCredentials;
import com.google.common.collect.ImmutableList;
import com.google.common.collect.Lists;
import java.io.FileInputStream;
import com.google.cloud.storage.*;
import com.google.cloud.storage.Blob;
import java.nio.file.Paths;
import java.util.Scanner;
import java.io.File;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.FileSystem;
import org.apache.hadoop.fs.FileUtil;
import org.apache.hadoop.fs.Path;
/**
 *
 * @author daniel
 */
public class MainProjectFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainProjectFrame
     */
    public MainProjectFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttGroup = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        hugoButt = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        shakeButt = new javax.swing.JRadioButton();
        tolstoyButt = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        resultsButt = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Go!");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Press \"Go\" to start Inverted Index Job:");

        buttGroup.add(hugoButt);
        hugoButt.setSelected(true);
        hugoButt.setText("Hugo");

        jLabel2.setText("Select which Author's Works you would like to run a job on:");

        buttGroup.add(shakeButt);
        shakeButt.setText("Shakespeare");
        shakeButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shakeButtActionPerformed(evt);
            }
        });

        buttGroup.add(tolstoyButt);
        tolstoyButt.setText("Tolstoy");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        resultsButt.setText("Get first 1000 terms");
        resultsButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resultsButtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(hugoButt)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(shakeButt)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tolstoyButt))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1)))
                        .addGap(0, 263, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(resultsButt)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hugoButt)
                    .addComponent(shakeButt)
                    .addComponent(tolstoyButt))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1))
                .addGap(1, 1, 1)
                .addComponent(resultsButt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        //Find which radio button is pressed
        String author = "";
        if (hugoButt.isSelected()) {
            author = "Hugo";
        } else if (shakeButt.isSelected()) {
            author = "shakespeare";
        } else if (tolstoyButt.isSelected()) {
            author = "Tolstoy";
        }
        
        String fileUri = "gs://dataproc-staging-us-west1-196681246404-tl4catln/Data/" + author + "/";
        
        
        try {
            GoogleCredentials credentials = GoogleCredentials.fromStream(new FileInputStream("./credentials.json"))
                    .createScoped(Lists.newArrayList("https://www.googleapis.com/auth/cloud-platform"));
            HttpRequestInitializer requestInitializer = new HttpCredentialsAdapter(credentials);
            Dataproc dataproc = new Dataproc.Builder(new NetHttpTransport(),new JacksonFactory(), requestInitializer).build();
            
            HadoopJob hJob = new HadoopJob();
            hJob.setMainJarFileUri("gs://dataproc-staging-us-west1-196681246404-tl4catln/jar/invertedindexjob.jar");
            hJob.setArgs(ImmutableList.of("InvertedIndexJob",
                         fileUri,
                         "gs://dataproc-staging-us-west1-196681246404-tl4catln/output"));
            
            dataproc.projects().regions().jobs().submit("cs1660-273518" , "us-west1", new SubmitJobRequest()
                         .setJob(new Job()
                            .setPlacement(new JobPlacement()
                                .setClusterName("cluster-truck-1"))
                         .setHadoopJob(hJob)))
                        .execute();
            System.out.println("made it!");
        } catch (Exception e) {
            System.out.println("Error!" + e);
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void shakeButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shakeButtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_shakeButtActionPerformed

    private void resultsButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resultsButtActionPerformed
        // TODO add your handling code here:
        //Go into bucket and grab output.txt file
        jTextArea1.setText("");
        jTextArea1.repaint();
        try {
            GoogleCredentials credentials = GoogleCredentials.fromStream(new FileInputStream("./credentials.json"))
                        .createScoped(Lists.newArrayList("https://www.googleapis.com/auth/cloud-platform"));
            Storage storage = StorageOptions.newBuilder().setCredentials(credentials).build().getService();
            //Merges files
            StorageObject target = new StorageObject();
            target.setBucket("dataproc-staging-us-west1-196681246404-tl4catln");
            target.setName("output.txt");
            
            Storage.ComposeRequest.Builder requestBuilder = new Storage.ComposeRequest.Builder();
            
            //Get list of objects to compose
            Page<Blob> blobs = storage.list("dataproc-staging-us-west1-196681246404-tl4catln",
                            BlobListOption.currentDirectory(),
                            BlobListOption.prefix("output/"));
            Iterator<Blob> iterator = blobs.iterateAll().iterator();
            ArrayList<String> blobList = new ArrayList<>();
            ArrayList<BlobId> blobIDs = new ArrayList<>();
            while(iterator.hasNext()) {
                Blob currBlob = iterator.next();
                blobIDs.add(currBlob.getBlobId());
                String name = currBlob.getName();
                //Skip success file
                if (!name.equals("output/_SUCCESS")) {
                    //System.out.println("adding " + name);
                    blobList.add(name);
                }
            }
            requestBuilder.addSource(blobList);
            
            requestBuilder.setTarget(
                    BlobInfo.newBuilder("dataproc-staging-us-west1-196681246404-tl4catln", "output.txt").build());
            Storage.ComposeRequest request = requestBuilder.build();
            
            storage.compose(request);
            //Deletes output folder and contents
            storage.delete(blobIDs);
            
            //Grabs merged output file
            Blob blob = storage.get(BlobId.of("dataproc-staging-us-west1-196681246404-tl4catln", "output.txt"));
            blob.downloadTo(Paths.get("./output.txt"));
            
            Scanner input = new Scanner(new File("output.txt"));
            int counter = 0;
            //Output contents of file
            while(input.hasNextLine() && counter < 1000) {
                counter++;
                String curr = input.nextLine();
                jTextArea1.append(curr + "\n");
                //System.out.println(counter + " " +curr);
            }
            jTextArea1.repaint();
        } catch (Exception e) {
            System.out.println("Error!" + e);
            e.printStackTrace();
        }

    }//GEN-LAST:event_resultsButtActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainProjectFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainProjectFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainProjectFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainProjectFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainProjectFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttGroup;
    private javax.swing.JRadioButton hugoButt;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton resultsButt;
    private javax.swing.JRadioButton shakeButt;
    private javax.swing.JRadioButton tolstoyButt;
    // End of variables declaration//GEN-END:variables
}
